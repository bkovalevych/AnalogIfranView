<Page
    x:Class="AnalogIfranView.Views.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:AnalogIfranView.Views"
    xmlns:viewModels="using:AnalogIfranView.ViewModels"
    xmlns:helper="using:AnalogIfranView.Helpers" 
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:Windows10version1809="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract, 7)"
    mc:Ignorable="d"
    xmlns:converter="using:AnalogIfranView.Converters"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
    NavigationCacheMode="Required"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity" 
    xmlns:Interactions="using:Microsoft.Xaml.Interactions.Core"
    x:Name="mainPage"
    xmlns:controls="using:Microsoft.UI.Xaml.Controls"
    >

    <Page.Resources>
        <converter:NumberConverter x:Key="numConverter"/>
        <converter:TabViewArgsConverter x:Key="tabCloseConverter"/>
    </Page.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
    
        <muxc:MenuBar>
            <muxc:MenuBarItem Title="{helper:ResourceString Name=file}">
                <MenuFlyoutItem Text="{helper:ResourceString Name=open}" 
                                Command="{x:Bind vm.SelectedPage.ThumbnailViewModel.OpenImageCommand, Mode=OneWay}"
                                />
                <MenuFlyoutItem Text="{helper:ResourceString Name=renameFile}"/>
                <MenuFlyoutSeparator/>
                <MenuFlyoutItem Text="{helper:ResourceString Name=save}" Command="{x:Bind vm.SelectedPage.ThumbnailViewModel.SaveCommand, Mode=OneWay}"/>
                <MenuFlyoutItem Text="{helper:ResourceString Name=saveAs}" Command="{x:Bind vm.SelectedPage.ThumbnailViewModel.SaveImageCommand, Mode=OneWay}"/>
                <MenuFlyoutItem Text="{helper:ResourceString Name=print}" />
                <MenuFlyoutSeparator/>
                <MenuFlyoutItem Text="{helper:ResourceString Name=settings}" 
                                Command="{x:Bind helper:NavigationService.Instance.NavigateCommand}"
                                CommandParameter="{local:DisplayManager PathToPage=Settings}"
                                />
                <MenuFlyoutItem Text="{helper:ResourceString Name=exit}" />
            </muxc:MenuBarItem>
            <muxc:MenuBarItem Title="{helper:ResourceString Name=edit}">
                <MenuFlyoutItem Text="{helper:ResourceString Name=undo}" Command="{x:Bind vm.SelectedPage.UndoRedoViewModel.UndoCommand, Mode=OneWay}"/>
                <MenuFlyoutItem Text="{helper:ResourceString Name=redo}" Command="{x:Bind vm.SelectedPage.UndoRedoViewModel.RedoCommand, Mode=OneWay}"/>
                <MenuFlyoutSeparator/>
                <MenuFlyoutItem Text="{helper:ResourceString Name=resizeSource}" Command="{x:Bind vm.SelectedPage.ThumbnailViewModel.GoToResizeCommand, Mode=OneWay}"/>
                <MenuFlyoutItem Text="{helper:ResourceString Name=insertText}"/>
                <MenuFlyoutItem Text="{helper:ResourceString Name=insertImage}"/>
                <MenuFlyoutSeparator/>
                <MenuFlyoutItem Text="{helper:ResourceString Name=cutSelection}"/>
                <MenuFlyoutItem Text="{helper:ResourceString Name=cutArea}"/>
                <MenuFlyoutSubItem Text="{helper:ResourceString Name=removeInsertStrip}">
                    <MenuFlyoutItem Text="{helper:ResourceString Name=removeVerticalStrip}"/>
                    <MenuFlyoutItem Text="{helper:ResourceString Name=removeHorizontalStrip}"/>
                    <MenuFlyoutSeparator/>
                    <MenuFlyoutItem Text="{helper:ResourceString Name=insertVerticalStrip}"/>
                    <MenuFlyoutItem Text="{helper:ResourceString Name=insertHorizontalStrip}"/>
                </MenuFlyoutSubItem>
                <MenuFlyoutSeparator/>
                <MenuFlyoutItem Text="{helper:ResourceString Name=cropSelection}"/>
                <MenuFlyoutItem Text="{helper:ResourceString Name=captureVisibleWindowArea}"/>
                <MenuFlyoutSeparator/>
                <MenuFlyoutItem Text="{helper:ResourceString Name=copy}"/>
                <MenuFlyoutItem Text="{helper:ResourceString Name=paste}"/>
                <MenuFlyoutItem Text="{helper:ResourceString Name=pasteSpecial}"/>
                <MenuFlyoutItem Text="{helper:ResourceString Name=deleteClearDisplay}"/>
                <MenuFlyoutSeparator/>
                <MenuFlyoutItem Text="{helper:ResourceString Name=clearClipboard}"/>

            </muxc:MenuBarItem>
            <muxc:MenuBarItem Title="{helper:ResourceString Name=thumbnailMenu}">
                <MenuFlyoutItem Text="{helper:ResourceString Name=createThumbnail}"
                                Command="{x:Bind helper:NavigationService.Instance.NavigateCommand}"
                                CommandParameter="{local:DisplayManager PathToPage=CreatingThumbnailDialog}"
                                />
            </muxc:MenuBarItem>
        </muxc:MenuBar>
        <controls:TabView Grid.Row="1" 
                          AddTabButtonCommand="{x:Bind vm.AddPage}"
                          AllowDropTabs="True"
                          SelectedIndex="{x:Bind vm.SelectedIndex, Mode=TwoWay}"
                          TabItemsSource="{x:Bind vm.Pages, Mode=TwoWay}"
                          SelectedItem="{x:Bind vm.SelectedPage, Mode=TwoWay}"
                          DataContext="{x:Bind vm.SelectedPage}"
                          
                          >
            <Interactivity:Interaction.Behaviors>
                <Interactions:EventTriggerBehavior EventName="TabCloseRequested">
                    <Interactions:InvokeCommandAction Command="{x:Bind vm.DeletePage}" 
                                                      InputConverter="{StaticResource tabCloseConverter}" />
                </Interactions:EventTriggerBehavior>
            </Interactivity:Interaction.Behaviors>
            <controls:TabView.TabItemTemplate>
                <DataTemplate>
                    <controls:TabViewItem IsClosable="True">
                        <controls:TabViewItem.Header>
                            <TextBlock Text="{Binding ThumbnailViewModel.NamePicture}"/>
                        </controls:TabViewItem.Header>
                        <controls:TabViewItem.Content>
                            <Grid >
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <StackPanel Margin="10"  Grid.Row="0" Orientation="Horizontal">
                                    <InkToolbar TargetInkCanvas="{Binding ElementName=canvas}">
                                        <InkToolbarCustomToolButton Name="undoButton" ToolTipService.ToolTip="{helper:ResourceString Name=undo}" Command="{Binding UndoRedoViewModel.UndoCommand}">
                                            <SymbolIcon Symbol="Undo"/>
                                        </InkToolbarCustomToolButton>
                                        <InkToolbarCustomToolButton Name="redoButton" ToolTipService.ToolTip="{helper:ResourceString Name=redo}" Command="{Binding UndoRedoViewModel.RedoCommand}">
                                            <SymbolIcon Symbol="Redo"/>
                                        </InkToolbarCustomToolButton>
                                    </InkToolbar>
                                    <Slider Header="" Grid.Row="1" Width="200" Maximum="4" StepFrequency="0.1" Minimum="0.2" Value="{Binding ThumbnailViewModel.Zoom, Mode=TwoWay}"/>
                                    <Button Content="{helper:ResourceString Name=share}" Command="{Binding ThumbnailViewModel.ShareCommand}"/>
                                </StackPanel>
                                <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                                    <ScrollViewer.Content>
                                        <Grid Margin="20" >
                                            <Grid Background="White" 
                                                  Width="{Binding ThumbnailViewModel.ScaledWidth, Mode=OneWay}"
                                                  Height="{Binding ThumbnailViewModel.ScaledHeight, Mode=OneWay}"
                                                  />
                                            <Image 
                                                Source="{Binding ThumbnailViewModel.Image, Mode=TwoWay}"
                                                Width="{Binding ThumbnailViewModel.ScaledWidth, Mode=OneWay}"
                                                Height="{Binding ThumbnailViewModel.ScaledHeight, Mode=OneWay}">
                                            </Image>
                                            <Border BorderThickness="1" BorderBrush="Aqua"
                                            Width="{Binding ThumbnailViewModel.ScaledWidth, Mode=OneWay}"
                                            Height="{Binding ThumbnailViewModel.ScaledHeight, Mode=OneWay}"
                                                >
                                                <InkCanvas x:Name="canvas" >
                                                    <Interactivity:Interaction.Behaviors>
                                                        <Interactions:EventTriggerBehavior EventName="Loaded">
                                                            <Interactions:InvokeCommandAction Command="{Binding InitPresenterCommand}" 
                                                                                      CommandParameter="{Binding ElementName=canvas, Path=InkPresenter}" />
                                                        </Interactions:EventTriggerBehavior>
                                                    </Interactivity:Interaction.Behaviors>
                                                </InkCanvas>
                                            </Border>
                                        </Grid>
                                    </ScrollViewer.Content>
                                </ScrollViewer>
                            </Grid>
                        </controls:TabViewItem.Content>
                    </controls:TabViewItem>
                    
                </DataTemplate>
            </controls:TabView.TabItemTemplate>
            </controls:TabView>
            <StackPanel Grid.Row="2" 
                        HorizontalAlignment="Right"
                        Background="{StaticResource AppBarBackgroundThemeBrush}"
                        VerticalAlignment="Bottom" Margin="0 0 20 5">
                <TextBlock FontSize="10" >
                    <Run Text="{helper:ResourceString Name=nameThumbnail}"/>
                    <Run Text=" : "/>
                    <Run Text="{x:Bind vm.SelectedPage.ThumbnailViewModel.NamePicture, Mode=OneWay}"/>
                    <Run Text="; "/>
                
                    <Run Text="{helper:ResourceString Name=width}"/>
                    <Run Text=" : "/>
                    <Run Text="{x:Bind vm.SelectedPage.ThumbnailViewModel.Width, Mode=OneWay}"/>
                    <Run Text="; "/>
                
                    <Run Text="{helper:ResourceString Name=height}"/>
                    <Run Text=" : "/>
                    <Run Text="{x:Bind vm.SelectedPage.ThumbnailViewModel.Height, Mode=OneWay}"/>
                    <Run Text="; "/>
                 </TextBlock>
            </StackPanel>
    </Grid>
</Page>
